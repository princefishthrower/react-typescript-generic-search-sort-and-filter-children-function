{"version":3,"sources":["components/GenericSorter.tsx","utils/genericSort.ts","components/GenericFilter.tsx","utils/genericFilter.ts","components/GenericSearchInput.tsx","hooks/useDebounce.ts","utils/genericSearch.ts","components/WidgetCard.tsx","mock-data/widgets.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["GenericSorter","props","data","defaultProperty","children","useState","property","isDescending","activeSorter","setActiveSorter","object","length","htmlFor","className","id","onChange","event","target","value","split","defaultValue","Object","keys","map","key","sort","widgetA","widgetB","objectA","objectB","sorter","result","genericSort","x","GenericFilter","activeFilters","setActiveFilters","labelTruthy","labelFalsy","getRadioButton","isTruthyPicked","label","type","toString","checked","filter","getChecked","widget","filters","every","genericFilter","GenericSearchInput","propertiesToSearchOn","searchQuery","setSearchQuery","debouncedSearchQuery","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","undefined","placeholder","aria-label","properties","query","some","toLowerCase","includes","WidgetCard","title","description","rating","updated","created","isSpecialCard","fromNow","date","widgets","Date","Math","floor","random","App","href","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ba601ccc.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { useState } from \"react\";\nimport ISorter from \"../interfaces/ISorter\";\nimport PropsWithChildrenFunction from \"../types/PropsWithChildrenFunction\";\nimport { genericSort } from \"../utils/genericSort\";\n\nexport interface ISortersProps<T> {\n  defaultProperty: Extract<keyof T, string | number | Date>;\n  data: Array<T>;\n}\n\nexport default function GenericSorter<T>(props: PropsWithChildrenFunction<ISortersProps<T>, T>) {\n  const { data, defaultProperty, children } = props;\n  const [activeSorter, setActiveSorter] = useState<ISorter<T>>({\n    property: defaultProperty,\n    isDescending: true,\n  });\n  const object = data.length > 0 ? data[0] : {};\n  return (\n    <>\n      <label htmlFor=\"sorters\" className=\"mt-3\">Sorters! Try us too! (We also work!)</label>\n      <select\n        id=\"sorters\"\n        className=\"custom-select\"\n        onChange={(event) =>\n          setActiveSorter(\n            {property: event.target.value.split(\",\")[0] as any,\n            isDescending: event.target.value.split(\",\")[1] === \"true\"}\n          )\n        }\n        defaultValue={[\"title\", \"true\"]}\n      >\n        {Object.keys(object).map((key) => {\n          if (!key) {\n            return <></>\n          }\n          return (\n            <>\n              <option\n                key={`${key}-true`}\n                value={[key, \"true\"]}\n              >\n                sort by '{key}' descending\n              </option>\n              <option\n                key={`${key}-false`}\n                value={[key, \"false\"]}\n              >\n                sort by '{key}' ascending\n              </option>\n            </>\n          );\n        })}\n      </select>\n      {children && data\n            .sort((widgetA, widgetB) =>\n            genericSort<T>(widgetA, widgetB, activeSorter)\n          )\n            .map(x => children(x))\n          }\n    </>\n  );\n}\n","import ISorter from \"../interfaces/ISorter\";\n\n// comparator function for any property within type T\n// works for: strings, numbers, and Dates (and is typed to accept only properties which are those types)\n// could be extended for other types but would need some custom comparison function here\nexport function genericSort<T>(\n  objectA: T,\n  objectB: T,\n  sorter: ISorter<T>\n) {\n  const result = () => {\n    if (objectA[sorter.property] > objectB[sorter.property]) {\n        return 1;\n    } else if (objectA[sorter.property] < objectB[sorter.property]) {\n        return -1;\n    } else {\n        return 0;\n    }\n  }\n\n  return sorter.isDescending ? result() * -1 : result();\n}\n","import * as React from \"react\";\nimport { ReactNode, useState } from \"react\";\nimport IFilter from \"../interfaces/IFilter\";\nimport PropsWithChildrenFunction from \"../types/PropsWithChildrenFunction\";\nimport { genericFilter } from \"../utils/genericFilter\";\n\nexport interface IFiltersProps<T> {\n  data: Array<T>;\n}\n\nexport default function GenericFilter<T>(\n  props: PropsWithChildrenFunction<IFiltersProps<T>, T>\n) {\n  const { data, children } = props;\n  const [activeFilters, setActiveFilters] = useState<Array<IFilter<T>>>([]);\n  const object = data.length > 0 ? data[0] : {};\n  const labelTruthy = (\n    <>\n      is <b>truthy</b>\n    </>\n  );\n\n  const labelFalsy = (\n    <>\n      is <b>falsy</b>\n    </>\n  );\n\n  const keys = Object.keys(object);\n  return (\n    <div className=\"p-1 my-2\">\n      <label className=\"mt-3\">Filters! Try us too! (We also work!)</label>\n      {(keys as any).map((key: keyof T) => {\n        const getRadioButton = (isTruthyPicked: boolean): ReactNode => {\n          const id = isTruthyPicked\n            ? `radio-defined-${key}`\n            : `radio-not-defined-${key}`;\n          const label = isTruthyPicked ? labelTruthy : labelFalsy;\n\n          const getChecked = () => {\n            const x = activeFilters.filter((x) => x.property === key);\n            return x.length === 1 && x[0].isTruthyPicked === isTruthyPicked;\n          };\n\n          return (\n            <>\n              <input\n                type=\"radio\"\n                id={id}\n                value={key.toString()}\n                checked={getChecked()}\n                onChange={(event) => {\n                  event.target.checked\n                    ? setActiveFilters([\n                        ...activeFilters.filter(\n                          (filter) => filter.property !== key\n                        ),\n                        { property: key, isTruthyPicked },\n                      ])\n                    : setActiveFilters(\n                        activeFilters.filter(\n                          (filter) => filter.property !== key\n                        )\n                      );\n                }}\n                className={\"m-1 ml-3\"}\n              />\n              <label htmlFor={id}>\n                '{key}' {label}\n              </label>\n            </>\n          );\n        };\n\n        return (\n          <>\n            <div key={key.toString()} className=\"input-group my-3\">\n              {getRadioButton(true)}\n              {getRadioButton(false)}\n            </div>\n          </>\n        );\n      })}\n      {children &&\n        data\n          .filter((widget) => genericFilter<T>(widget, activeFilters))\n          .map((x) => children(x))}\n    </div>\n  );\n}\n","import IFilter from \"../interfaces/IFilter\";\n\n// filter n properties for truthy or falsy values on type T (no effect if no filter selected)\nexport function genericFilter<T>(object: T, filters: Array<IFilter<T>>) {\n  // no filters; no effect - return true\n  if (filters.length === 0) {\n    return true;\n  }\n\n  return filters.every((filter) => {\n    return filter.isTruthyPicked ? object[filter.property] : !object[filter.property];\n  });\n}\n","import * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport useDebounce from \"../hooks/useDebounce\";\nimport PropsWithChildrenFunction from \"../types/PropsWithChildrenFunction\";\nimport { genericSearch } from \"../utils/genericSearch\";\n\nexport interface ISearchProps<T> {\n  data: Array<T>;\n  propertiesToSearchOn: Array<keyof T>\n}\n\nexport default function GenericSearchInput<T>(\n  props: PropsWithChildrenFunction<ISearchProps<T>, T>\n) {\n  const { data, propertiesToSearchOn, children } = props;\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n  const debouncedSearchQuery = useDebounce(searchQuery, 250);\n\n  useEffect(() => {\n    if (debouncedSearchQuery !== undefined) {\n      setSearchQuery(debouncedSearchQuery);\n    }\n  }, [debouncedSearchQuery, setSearchQuery]);\n\n  return (\n    <>\n      <label htmlFor=\"search\" className=\"mt-3\">\n        Search! Try me! (I work!)\n      </label>\n      <input\n        id=\"search\"\n        className=\"form-control full-width\"\n        type=\"search\"\n        placeholder=\"Search...\"\n        aria-label=\"Search\"\n        onChange={(event) => setSearchQuery(event.target.value)}\n      />\n      {children &&\n        data\n          .filter((widget) =>\n            genericSearch<T>(\n              widget,\n              propertiesToSearchOn,\n              searchQuery\n            )\n          )\n          .map((x) => children(x))}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\n\n// Taken from https://dev.to/gabe_ragland/debouncing-with-react-hooks-jci\nexport default function useDebounce(value: any, delay: number) {\n\n    const [debouncedValue, setDebouncedValue] = useState(value);\n\n    useEffect(\n        () => {\n            const handler = setTimeout(() => {\n                setDebouncedValue(value);\n            }, delay);\n\n            return () => {\n                clearTimeout(handler);\n            };\n        }\n    );\n\n    return debouncedValue;\n}\n","// case insensitive search of n-number properties of type T\n// returns true if at least one of the property values includes the query value\nexport function genericSearch<T>(\n    object: T,\n    properties: Array<keyof T>,\n    query: string\n): boolean {\n\n    if (query === \"\") {\n        return true;\n    } \n\n    return properties.some((property) => {\n        const value = object[property];\n        if (typeof value === \"string\" || typeof value === \"number\") {\n            return value.toString().toLowerCase().includes(query.toLowerCase());\n        }\n        return false;\n    });\n}","import * as React from \"react\";\nimport Moment from \"react-moment\";\nimport IWidget from \"../interfaces/IWidget\";\n\nexport function WidgetCard(props: IWidget) {\n  const {\n    title,\n    description,\n    rating,\n    updated,\n    created,\n    id,\n    isSpecialCard,\n  } = props;\n  return (\n    <div className=\"col-12 p-3\">\n      <div className={isSpecialCard ? \"card specialCard\" : \"card\"}>\n        <div className=\"card-body\">\n          <h1 className=\"card-title\">{title}</h1>\n          <p className=\"card-text\">{description}</p>\n          <p className=\"card-text font-italic\">Rating: {rating}/10</p>\n        </div>\n        <div className=\"card-footer text-muted text-right\">\n          <span className=\"float-left\">#{id}</span> created:{\" \"}\n          <Moment fromNow date={created} />, updated:{\" \"}\n          <Moment fromNow date={updated} />\n        </div>\n      </div>\n    </div>\n  );\n}\n","import IWidget from \"../interfaces/IWidget\";\n\n// Typically this would come from an API call or similar. It's hardcoded here for easy illustration\nconst widgets: Array<IWidget> = [\n  {\n    title: \"I am title 1\",\n    description: \"cool description 1\",\n    id: 1,\n    rating: 10,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"Title 2\",\n    description: \"cool description 2\",\n    id: 2,\n    rating: 7,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: true\n  },\n  {\n    title: \"Title Three\",\n    description: \"another description\",\n    id: 3,\n    rating: 4,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"Title 4: I love generics\",\n    description: \"generics are awesome!\",\n    id: 4,\n    rating: 6,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"We also love TypeScript\",\n    description: \"Yes, TypeScript is also very cool\",\n    id: 5,\n    rating: 10,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"X\",\n    description: \"X\",\n    id: 6,\n    rating: 10,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"Y\",\n    description: \"Y\",\n    id: 7,\n    rating: 9,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"Z\",\n    description: \"Z\",\n    id: 8,\n    rating: 1,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: true\n  },\n  {\n    title: \"A\",\n    description: \"A\",\n    id: 9,\n    rating: 6,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"B\",\n    description: \"B\",\n    id: 10,\n    rating: 0,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"C\",\n    description: \"C\",\n    id: 11,\n    rating: 3,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"\",\n    description: \"I am the description. This card has an empty, i.e. 'falsy' title :(\",\n    id: 12,\n    rating: 5,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n  {\n    title: \"I am the title. This card has an empty, i.e. 'falsy' description :(\",\n    description: \"\",\n    id: 13,\n    rating: 5,\n    created: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    updated: new Date(+new Date() - Math.floor(Math.random() * 10000000000)),\n    isSpecialCard: false\n  },\n];\n\nexport default widgets;\n","import React from \"react\";\nimport GenericSorter from \"./components/GenericSorter\";\nimport GenericFilter from \"./components/GenericFilter\";\nimport GenericSearchInput from \"./components/GenericSearchInput\";\nimport { WidgetCard } from \"./components/WidgetCard\";\nimport IWidget from \"./interfaces/IWidget\";\nimport widgets from \"./mock-data/widgets\";\n\nexport default function App() {\n  return (\n    <div className=\"container mx-auto my-2\">\n      <div className=\"my-3\">\n        <i>\n          From the blog post{\" \"}\n          <a href=\"https://chrisfrewin.com/blog/extending-react-types-for-children-as-a-function/\">\n            \"Extending React Standard Types to Allow for Children as a Function\"\n          </a>\n          .\n        </i>\n      </div>\n      <GenericSearchInput<IWidget>\n        data={widgets}\n        propertiesToSearchOn={[\"title\", \"description\"]}\n      >\n        {(widget) => <WidgetCard key={widget.id} {...widget} />}\n      </GenericSearchInput>\n      <h3>Results:</h3>\n      <div className=\"row\">\n        <GenericSorter<IWidget> data={widgets} defaultProperty=\"title\">\n          {(widget) => <WidgetCard key={widget.id} {...widget} />}\n        </GenericSorter>\n      </div>\n      <div className=\"row\">\n        <GenericFilter<IWidget> data={widgets}>\n          {(widget) => <WidgetCard key={widget.id} {...widget} />}\n        </GenericFilter>\n      </div>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/styles.scss';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}